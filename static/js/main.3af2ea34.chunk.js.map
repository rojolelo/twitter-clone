{"version":3,"sources":["components/SearchResult.js","components/SearchContainer.js","components/Notifications/Notification.js","components/Notifications/NotificationsContainer.js","components/Header.js","components/Tweet.js","components/WriteTweet.js","components/TimeLine.js","components/UserBox.js","components/LandingPage.js","components/RegisterPopUp.js","components/LoggedLanding.js","components/Loading.js","components/FollowButton.js","components/UnfollowButton.js","components/UserBoxInUserPage.js","components/UserPage.js","components/ChangeThings.js","App.js","serviceWorker.js","index.js"],"names":["SearchResult","props","image","result","profilepic","react_default","a","createElement","react_router_dom","to","id","className","src","firstName","SearchContainer","state","this","search","length","searchState","results","map","i","components_SearchResult","key","Component","Notification","seenNotification","_this","bind","Object","assertThisInitialized","notification","seen","isTweet","Boolean","text","user","Fragment","concat","onClick","NotificationsContainer","usersDB","firebase","database","ref","child","email","auth","currentUser","oldNotifications","loggedUserId","once","data","users","val","keys","then","set","_this2","notifications","Notifications_Notification","usersArray","Header","searchResult","unseenNotifications","showNotifications","refSearch","React","createRef","Logout","LogIn","toggleSettings","toggleNotifications","setState","window","location","replace","onAuthStateChanged","on","snapshot","newNotifications","logged","_this3","regex","RegExp","current","value","count","test","push","x","toConsumableArray","Set","logOut","arr","comp","e","final","indexOf","filter","notificationsToShow","sort","b","timeA","Date","getTime","slice","Notifications_NotificationsContainer","onChange","type","placeholder","components_SearchContainer","Tweet","name","message","likes","likesNumber","retweets","retweetedBy","retweetedByNumber","date","showTime","tweetId","likedByLogged","showRetweetedBy","matchingRetweeted","loggedUser","deleted","like","tweetLikesDB","userNotifications","newNotification","toISOString","dislike","userid","retweet","tweetRetweetedDB","Swal","fire","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","retweetDate","newRetweet","deleteTweet","tweetsDB","sameUser","_this$props$tweet","tweet","newMessage","mentionedUsers","match","approvedUsers","tweetDate","timeAgo","Math","floor","j","splittedMessage","split","hasOwnProperty","updated","index_es","icon","faRetweet","word","faReply","faHeart","faTrash","userData","WriteTweet","mentions","refTweetText","sendTweet","writeTweet","cleanState","checkMention","mentionRegex","tweetData","refreshRender","tweetMessage","usersNotifications","userEmail","update","maxLength","TimeLine","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loading","following","userPage","tweetsToShow","pageChanged","newTweets","searchTweets","matchUsers","matchUsersRetweet","reRender","searchOneTweet","tweetRegex","pathname","approved","tweets","error","console","log","matches","userId","tweetUser","find","matchs","_loop","followingUser","showingTweets","showingNewTweets","components_WriteTweet","components_Tweet","UserBox","followers","tweetCount","coverpic","fromUndefinedToZero","style","height","width","backgroundSize","backgroundPosition","backgroundImage","LandingPage","logIn","emailRef","passwordRef","preventDefault","password","faSearch","faPeopleCarry","onSubmit","toggleRegisterPopUp","RegisterPopUp","register","refName","refEmail","refPassword","refUserId","alert","registerData","propsSent","LoggedLanding","folowers","catch","interval","setInterval","clearInterval","components_UserBox","components_TimeLine","Loading","FollowButton","follow","UnfollowButton","unfollow","UserBoxInUserPage","notFound","followingButton","sendToState","undefined","followedId","loggedEmail","followingKeys","alt","components_FollowButton","components_UnfollowButton","UserPage","loaded","backgroundColor","marginTop","components_UserBoxInUserPage","ChangeThings","profilePic","coverPic","completed","filesToUpload","uploadedFiles","profileLink","coverLink","profilePicHandler","profilePicFile","target","files","size","coverPicHandler","coverPicFile","upload","profileStorageRef","storage","coverStorageRef","put","percentage","bytesTransferred","totalBytes","getDownloadURL","url","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firstCheck","stateSetted","App","showPopUp","loadingFalse","signInWithEmailAndPassword","code","signOut","newUser","createUserWithEmailAndPassword","reload","_this4","basename","process","react_router","exact","path","render","components_Header","components_ChangeThings","components_LoggedLanding","components_UserPage","_this5","components_RegisterPopUp","components_Loading","components_LandingPage","_this6","renderLogged","renderNoLogged","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3af2ea34.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst SearchResult = (props) => {\r\n    let image;\r\n\r\n    if (!props.result.profilepic) {\r\n        image = \"https://cdn.britannica.com/67/197567-131-1645A26E.jpg\"\r\n    } else {\r\n        image = props.result.profilepic\r\n    }\r\n    return ( \r\n        <Link to={props.result.id}>\r\n        <div className=\"search-result-container\">\r\n            <img id=\"search-picture\" src={image} />\r\n            <span className=\"search-result-name\">{props.result.firstName}</span>\r\n            <span className=\"search-result-id\">@{props.result.id}</span>\r\n        </div>\r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default SearchResult;","import React, { Component } from 'react';\r\nimport SearchResult from './SearchResult';\r\n\r\nclass SearchContainer extends Component {\r\n    state = {  }\r\n    render() { \r\n        if (this.props.search.length < 1) return null;\r\n        if (this.props.searchState === \"\") return null;\r\n        const results = this.props.search;\r\n        return ( \r\n            <div className=\"search-container-container\">\r\n\r\n                {results.map((result, i) => {\r\n                    return <SearchResult key={i} result={result}/>\r\n                })}                \r\n\r\n                <div className=\"search-result-container\">\r\n                    <h5 className=\"search-result-name\">Search for more...</h5>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SearchContainer;","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Notification extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    seenNotification = this.seenNotification.bind(this)\r\n\r\n    seenNotification () {\r\n        this.props.seenNotification(this.props.notification);\r\n    }\r\n\r\n    render(){ \r\n   \r\n    const notification = this.props.notification;\r\n\r\n    const isTweet = Boolean(notification[4])\r\n    let text= \"\";\r\n    const user = notification[0];\r\n\r\n    if (notification[3] === \"follow\"){\r\n        text = \"is following you.\"\r\n    } else if (notification[3] === \"like\") {\r\n        text = \"liked you tweet.\"\r\n    } else if (notification[3] === \"retweet\"){\r\n        text = \"has retweeted your tweet.\"\r\n    } else if (notification[3] === \"mention\") {\r\n        text = \"has mentioned you in a tweet.\"\r\n    }\r\n\r\n    let seen;\r\n\r\n    if (!notification[2]) seen = \"unseen\"; else seen=\"seen\";\r\n\r\n   \r\n\r\n    return ( \r\n<React.Fragment>\r\n        { isTweet ?\r\n\r\n        \r\n        <div className={`notification-container ${seen}`} onClick={this.seenNotification}>\r\n                    <p className=\"notification-text\">\r\n                        <Link to={user}>\r\n                        <span className=\"notification-user\">@{user} </span>\r\n                        </Link>     \r\n                        <Link to={`/tweet/${notification[4]}`}>\r\n                        {text}\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n        \r\n\r\n        :\r\n\r\n        <div className={`notification-container ${seen}`} onClick={this.seenNotification}>\r\n            <p className=\"notification-text\">\r\n                <Link to={user}>\r\n                <span className=\"notification-user\">@{user} </span>\r\n                </Link>                \r\n                {text}\r\n            </p>\r\n        </div>\r\n    }\r\n    </React.Fragment>\r\n     );}\r\n}\r\n \r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Notification from \"./Notification\"\r\nimport firebase from \"firebase\";\r\n\r\nclass NotificationsContainer extends Component {\r\n    state = {  }\r\n\r\n    seenNotification = (notification) =>{\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const email = firebase.auth().currentUser.email;\r\n        let oldNotifications = [];\r\n        let loggedUserId = \"\";\r\n\r\n        // notification[2] = 1;\r\n\r\n        usersDB.once(\"value\", data =>{\r\n            const users = data.val();\r\n            const keys = Object.keys(users);\r\n\r\n            \r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (email == users[keys[i]][\"email\"]){\r\n                    oldNotifications = users[keys[i]][\"notifications\"];\r\n                    loggedUserId = users[keys[i]][\"id\"];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < oldNotifications.length; i++){\r\n                if (\r\n                        notification[0] === oldNotifications[i][0] &&\r\n                        notification[1] === oldNotifications[i][1] &&\r\n                        notification[2] === oldNotifications[i][2] &&\r\n                        notification[3] === oldNotifications[i][3]\r\n                ) {\r\n                    oldNotifications[i][2] = 1;\r\n                    break\r\n                }\r\n            }\r\n\r\n            \r\n        }).then(() =>{\r\n            usersDB.child(loggedUserId).child(\"notifications\").set(oldNotifications);\r\n        })\r\n    }\r\n    \r\n    render() { \r\n\r\n\r\n\r\n        if (!this.props.notifications) {\r\n            return (\r\n                <div className=\"notifications-container\">\r\n                    <p>There are not notifications to show.</p>\r\n                 </div>\r\n            )\r\n        } else if (this.props.notifications.length === 0) {\r\n            return (<div className=\"notifications-container\">\r\n                    <p>There are not notifications to show.</p>\r\n                 </div>)\r\n        }\r\n\r\n        return ( \r\n            <div className=\"notifications-container\">\r\n                {this.props.notifications.map((notification,i) => {\r\n                   return <Notification notification={notification} seenNotification={this.seenNotification} key={i}/>\r\n                })}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NotificationsContainer;","import React, { Component } from 'react';\r\nimport firebase from  \"firebase\";\r\nimport SearchContainer from './SearchContainer';\r\nimport {Link} from \"react-router-dom\";\r\nimport NotificationsContainer from './Notifications/NotificationsContainer';\r\n\r\n;\r\nlet usersArray = [];\r\nlet logged = false;\r\nlet firstCheck = false;\r\n\r\nclass Header extends Component {\r\n    state = { \r\n        search: \"\",\r\n        searchResult : [],\r\n        profilepic: \"https://cdn.britannica.com/67/197567-131-1645A26E.jpg\",\r\n        notifications: [],\r\n        unseenNotifications: 0,\r\n        showNotifications: false,\r\n     }\r\n    refSearch = React.createRef();\r\n\r\n    Logout = this.Logout.bind(this)\r\n    search = this.search.bind(this)\r\n    LogIn = this.LogIn.bind(this)    \r\n\r\n    LogIn() {\r\n        window.location.replace(\"/twitter-clone/\")        \r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        \r\n        \r\n\r\n        \r\n\r\n        \r\n        firebase.auth().onAuthStateChanged((user) => {        \r\n            if (user) { \r\n              const email = firebase.auth().currentUser.email;\r\n              const usersDB = firebase.database().ref().child(\"users\");\r\n                let loggedUserId = false;\r\n              let profilepic = \"\";\r\n\r\n              usersDB.once(\"value\", data =>{\r\n                  const users = data.val();\r\n                  const keys = Object.keys(users);\r\n\r\n                  for (let i = 0; i < keys.length; i++) {\r\n                      if (users[keys[i]][\"email\"] === email) {\r\n                            loggedUserId = users[keys[i]][\"id\"];\r\n                            \r\n                          if (!!users[keys[i]][\"profilepic\"]) {\r\n                               profilepic= users[keys[i]][\"profilepic\"];                               \r\n                               break;                                \r\n                          }\r\n                      }\r\n                  }                    \r\n              }).then(() => {\r\n\r\n\r\n                ////////NOTIFICATIONS\r\n\r\n                if (loggedUserId){\r\n                    usersDB.child(loggedUserId).child(\"notifications\").on(\"value\", snapshot =>{\r\n                        \r\n                        const newNotifications = snapshot.val()\r\n                        let unseenNotifications = 0;\r\n\r\n\r\n                        if (!!newNotifications){\r\n                         for (let i = 0; i < newNotifications.length; i++){\r\n                            if (newNotifications[i][2] === 0){\r\n                                unseenNotifications++;\r\n                            }\r\n                         }\r\n                        } else {\r\n                            return null;\r\n                        }\r\n\r\n                        this.setState({ \r\n                            \r\n                            unseenNotifications,\r\n                            notifications: snapshot.val()\r\n                        })\r\n                    })\r\n                }\r\n\r\n                //////////////////\r\n\r\n                  if (profilepic.length > 0){\r\n                      this.setState({\r\n                          profilepic,\r\n                          logged: true\r\n                      })\r\n                  } else {\r\n                      this.setState({\r\n                          logged:true\r\n                        })\r\n                  }\r\n              })\r\n              \r\n            }\r\n          });\r\n    }\r\n\r\n    search() {     \r\n        let searchResult=[];\r\n        usersArray= []; \r\n        const usersDB = firebase.database().ref().child(\"users\")\r\n        const regex = new RegExp(this.refSearch.current.value, \"i\");\r\n\r\n        if (this.refSearch.current.value === \"\") {\r\n            this.setState({\r\n                search: \"\"\r\n            })\r\n            return null;\r\n        };\r\n\r\n        usersDB.once(\"value\", data =>{\r\n            const users = data.val();\r\n            const keys = Object.keys(users)            \r\n            let count = 0;\r\n\r\n            for (let i = 0; i < keys.length; i++)   {\r\n                if (count > 5) return null;\r\n                \r\n                if (regex.test(users[keys[i]][\"id\"]) || regex.test(users[keys[i]][\"firstName\"])) {\r\n                    usersArray.push(users[keys[i]]);\r\n                    count++;\r\n                }\r\n            }\r\n            \r\n        }).then(x => {           \r\n            searchResult = [... new Set (usersArray)];\r\n            this.setState({\r\n                searchResult, \r\n                search: this.refSearch.current.value\r\n            })\r\n        })\r\n    }\r\n\r\n    Logout(){\r\n        this.props.logOut();\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.props.toggleSettings();\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n        this.setState({\r\n            showNotifications: !this.state.showNotifications\r\n        })\r\n    }\r\n\r\n    render() { \r\n\r\n        \r\n        if (this.state.searchResult.length > 0) this.state.searchResult = getUnique(this.state.searchResult, \"id\");\r\n        var next = false;\r\n\r\n        function getUnique(arr,comp){\r\n\r\n            //store the comparison  values in array\r\n            const unique =  arr.map(e=> e[comp]). \r\n                    // store the keys of the unique objects\r\n                    map((e,i,final) =>final.indexOf(e) === i && i) \r\n                    // eliminate the dead keys & return unique objects\r\n                    .filter((e)=> arr[e]).map(e=>arr[e]);\r\n\r\n            return unique\r\n        }\r\n\r\n        ///////////////////////////////////////////////////////////////\r\n\r\n        let notificationsToShow;\r\n\r\n        if (!!this.state.notifications) {\r\n            const orderedNotifications = this.state.notifications.sort((a,b) => {\r\n                var timeA = new Date(a[1]).getTime()\r\n                var timeB = new Date(b[1]).getTime()\r\n                  return timeB - timeA;\r\n           })\r\n\r\n           notificationsToShow = orderedNotifications.slice(0,9)\r\n        }\r\n\r\n        \r\n////////////////////////////////////////////////////////////////////////\r\n       \r\n        if (this.state.logged) {\r\n            return ( \r\n                <div className=\"header-container\">\r\n                    <div className=\"header-left\">\r\n                    <Link to=\"/\">\r\n                        <h3 className=\"header-button\">Home</h3>\r\n                    </Link>\r\n                    <h3 className=\"header-button\" onClick={this.toggleNotifications}>Notifications</h3>\r\n                    {this.state.unseenNotifications > 0 ? <span className=\"header-notification-number\">{this.state.unseenNotifications}</span> : null}\r\n                    {this.state.showNotifications ? <NotificationsContainer notifications={notificationsToShow}/> : null}\r\n                    <h3 className=\"header-button disabled-button\" >Messages</h3>\r\n                    </div>\r\n                    <div className=\"header-mid\">\r\n                    <h3 id=\"header-logo\">Logo</h3>    \r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                    <input onChange={this.search} ref={this.refSearch} type=\"text\" id=\"header-search\" placeholder=\"Search...\"/>\r\n                    <SearchContainer search={this.state.searchResult} searchState={this.state.search}/>\r\n                    <img id=\"header-profile-picture\" onClick={this.toggleSettings} src={this.state.profilepic}/>\r\n                    <button id=\"header-logout\" onClick={this.Logout}>Log Out</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"header-container\">\r\n                    <div className=\"header-left\">\r\n                        <h3 className=\"header-button header-logout\">Home</h3>\r\n                        <h3 className=\"header-button header-logout\">Notifications</h3>\r\n                        <h3 className=\"header-button header-logout\">Messages</h3>\r\n                    </div>\r\n                    <div className=\"header-mid\">\r\n                        <h3 id=\"header-logo\">Logo</h3>    \r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                        <input onChange={this.search} ref={this.refSearch} type=\"text\" id=\"header-search\" placeholder=\"Search...\"/>\r\n                        <SearchContainer search={this.state.searchResult} searchState={this.state.search} />\r\n                        <img id=\"header-profile-picture\" src=\"https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/512x512/plain/user.png\"/>\r\n                        <button id=\"header-logout\" onClick={this.LogIn}>Log In</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default Header;","/* PARTE SUPERIOR: LLEVA, ID, HORA\r\n    PARTE MEDIA: MENSAJE\r\n    PARTE BAJA: LIKES, RESPUESTAS Y RETWEETS\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faComment as faReply, faRetweet, faHeart, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Link} from \"react-router-dom\"\r\nimport firebase from \"firebase\";\r\nimport { thisExpression } from '@babel/types';\r\nimport Swal from \"sweetalert2\";\r\n\r\n class Tweet extends React.Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        user: \"\",\r\n        profilepic: false,\r\n        message: \"\",\r\n        likes: [],\r\n        likesNumber: \"\",\r\n        retweets: \"\",\r\n        retweetedBy :\"\",\r\n        retweetedByNumber: \"\",\r\n        date: \"\",\r\n        showTime: \"\",\r\n        tweetId: \"\",\r\n        likedByLogged: false,\r\n        showRetweetedBy: false,\r\n        matchingRetweeted: \"\",\r\n        loggedUser: \"0\",\r\n        deleted: false\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        const {name, user, message, likes, retweets, retweetedBy, date, tweetId, likesNumber, retweetedByNumber, showRetweetedBy, matchingRetweeted } = this.props.tweet;\r\n        let profilepic = false;\r\n        var newMessage = [];     \r\n        \r\n\r\n        \r\n        //MENTIONED USERS IN THE MESSAGE\r\n        const mentionRegex = /@\\w+/g;\r\n        var mentionedUsers = message.match(mentionRegex);\r\n     /*    for (let i = 0; i < mentionedUsers.length; i++){\r\n            mentionedUsers[i] = mentionedUsers[i].replace(\"@\", \"\");\r\n            mentionedUsers[i] = [mentionedUsers[i], 0];\r\n        } */\r\n        // the number inside of mentioned users array determines if the users exists.\r\n\r\n        const approvedUsers = {};\r\n\r\n        //////////////////////////\r\n        \r\n        const tweetLikesDB = firebase.database().ref().child(\"tweets\").child(tweetId).child(\"likes\");\r\n        let email;\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n\r\n        //CHECK IF LOGGED\r\n        if (!!firebase.auth().currentUser){\r\n            email = firebase.auth().currentUser.email\r\n        }\r\n\r\n        let loggedUser = \"\";\r\n\r\n        const tweetDate = new Date(date);\r\n        const thisMoment = new Date()\r\n        let timeAgo = (thisMoment-tweetDate)/1000;\r\n        let showTime = \"\";\r\n        \r\n        let likedByLogged = false;\r\n\r\n        \r\n        // TIME AGO TO SHOW\r\n        if        (timeAgo < 61) {\r\n            showTime = `${Math.floor(timeAgo)} seconds ago`\r\n        } else if (timeAgo < 3600) {\r\n            timeAgo = Math.floor(timeAgo / 60);\r\n            showTime = `${timeAgo} minutes ago`\r\n            if (timeAgo === 1) showTime = `${timeAgo} minute ago`\r\n        } else if (timeAgo < 86400) {\r\n            timeAgo = Math.floor(timeAgo / 3600);\r\n            showTime = `${timeAgo} hours ago`\r\n            if (timeAgo === 1) showTime = `${timeAgo} hour ago`\r\n        } else if (timeAgo < 604800) {\r\n            timeAgo = Math.floor(timeAgo / 86400);\r\n            showTime = `${timeAgo} days ago`\r\n            if (timeAgo === 1) showTime = `${timeAgo} day ago`\r\n        } else if (timeAgo < 2419200) {\r\n            timeAgo = Math.floor(timeAgo / 604800);\r\n            showTime = `${timeAgo} weeks ago`\r\n            if (timeAgo === 1) showTime = `${timeAgo} week ago`\r\n        } else if (timeAgo < 29030400) {\r\n            timeAgo = Math.floor(timeAgo / 2419200);\r\n            showTime = `${timeAgo} months ago`\r\n            if (timeAgo === 1) showTime = `${timeAgo} month ago`\r\n        } else {\r\n            timeAgo = Math.floor(timeAgo / 29030400);\r\n            showTime = `${timeAgo} years ago`\r\n            if (timeAgo === 1) showTime = `${timeAgo} year ago`\r\n        }\r\n\r\n        usersDB.once(\"value\", data =>{\r\n            const users = data.val();\r\n            const keys = Object.keys(users);\r\n            let count= 0;\r\n\r\n            //  GET LOGGED USER ID IN ORDER TO CHECK LIKED\r\n            for (let i = 0; i < keys.length; i++){\r\n                // if (count === 2) break;\r\n                if (email === users[keys[i]][\"email\"]) {\r\n                    loggedUser = users[keys[i]][\"id\"];\r\n                    count++;\r\n                }\r\n\r\n            //GET TWEETER USER TO GET PROFILEPIC\r\n                if (user === users[keys[i]][\"id\"]) {\r\n                    if (!!users[keys[i]][\"profilepic\"]) {\r\n                        profilepic = users[keys[i]][\"profilepic\"];\r\n                        count++;\r\n                    } else {\r\n                        profilepic = \"https://cdn.britannica.com/67/197567-131-1645A26E.jpg\"\r\n                        count++;\r\n                    }\r\n                }\r\n\r\n            //CREATE PROPERTY IF USER IS FOUND - SO IT CAN BE CHECKED IF USER EXISTS.\r\n                if (!!mentionedUsers) {\r\n                    for (let j = 0; j < mentionedUsers.length; j++) {\r\n                        if (mentionedUsers[j].replace(\"@\",\"\") == users[keys[i]][\"id\"]){\r\n                            approvedUsers[mentionedUsers[j].replace(\"@\",\"\")] = 1\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // PENDANT: SPLIT THEN <FRAGMENT> THE STRING WITH HTML TO SHOW IN REACT\r\n            var splittedMessage = message.split(\" \");\r\n            \r\n                  \r\n            for (let i = 0; i < splittedMessage.length; i++) {\r\n                if (splittedMessage[i][0] == \"@\" && approvedUsers.hasOwnProperty(splittedMessage[i].replace(\"@\",\"\"))) {\r\n                        newMessage.push(<React.Fragment><Link to={splittedMessage[i].replace(\"@\", \"\")} ><span className=\"mention-user\">{splittedMessage[i]}</span></Link></React.Fragment>)\r\n                        newMessage.push(\" \")\r\n                } else {\r\n                    newMessage.push(splittedMessage[i])\r\n                    newMessage.push(\" \")\r\n                }                \r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }).then(x => {\r\n            tweetLikesDB.once(\"value\", data=>{\r\n                const likes = data.val();\r\n    \r\n                if (!likes) {\r\n                    return null\r\n                } else {\r\n                    for (let i = 0; i < likes.length; i++){\r\n                        if (likes[i] === loggedUser) {\r\n                            likedByLogged = true;\r\n                        }\r\n                    }\r\n                }\r\n            }).then(x => {\r\n                this.setState({\r\n                    name, \r\n                    user, \r\n                    message : newMessage, \r\n                    likes, \r\n                    retweets, \r\n                    retweetedBy, \r\n                    date, \r\n                    showTime, \r\n                    tweetId, \r\n                    likedByLogged, \r\n                    likesNumber, \r\n                    retweetedByNumber, \r\n                    showRetweetedBy, \r\n                    matchingRetweeted, \r\n                    profilepic, \r\n                    loggedUser,\r\n                    updated: true\r\n                })\r\n            })\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    like = () => {\r\n        let email;\r\n\r\n        if (!!firebase.auth().currentUser){\r\n            email = firebase.auth().currentUser.email\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n\r\n        const tweetLikesDB = firebase.database().ref().child(\"tweets\").child(this.state.tweetId).child(\"likes\");\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n\r\n        let loggedUser = \"\";\r\n        let likes = [];\r\n        let userNotifications = [];\r\n        let newNotification = [];\r\n\r\n        if (!Boolean(email))  return null;\r\n\r\n        usersDB.once(\"value\", data =>{\r\n            const users = data.val();\r\n            const keys = Object.keys(users);\r\n\r\n            \r\n\r\n            for (let i = 0; i < keys.length; i++){\r\n                if (email === users[keys[i]][\"email\"]) {\r\n                    loggedUser = users[keys[i]][\"id\"];\r\n                    newNotification[0] = users[keys[i]][\"id\"];\r\n                }\r\n\r\n                if (this.state.user === users[keys[i]][\"id\"]) {\r\n                    userNotifications = users[keys[i]][\"notifications\"]\r\n                }\r\n            }\r\n\r\n            newNotification[1] = new Date().toISOString();\r\n            newNotification[2] = 0;\r\n            newNotification[3] = \"like\";\r\n            newNotification[4] = this.state.tweetId;\r\n\r\n            // newNotification = [user, date, 0, like, twID]\r\n\r\n            if (!userNotifications) {\r\n                userNotifications = [newNotification]\r\n            } else {\r\n                userNotifications.push(newNotification)\r\n            }\r\n           \r\n        }).then(() => {\r\n            tweetLikesDB.once(\"value\", data => {\r\n                likes = data.val()\r\n                if (!likes) {\r\n                    likes = [loggedUser];\r\n                } else {\r\n                    likes.push(loggedUser);\r\n                }\r\n            }).then(x =>{\r\n                tweetLikesDB.set(likes);\r\n\r\n                //SEND NOTIFICATION ONLY IF USER IS DIFFERENT.\r\n                // OBJECTIVE: NOT SELF NOTIFICATIONS.\r\n                if (newNotification[0] !== this.state.user){\r\n                    usersDB.child(this.state.user).child(\"notifications\").set(userNotifications);\r\n                }\r\n\r\n                this.setState({\r\n                    likedByLogged: true,\r\n                    likesNumber: this.state.likesNumber+1})\r\n            })\r\n        })\r\n\r\n        \r\n\r\n\r\n\r\n    }\r\n\r\n    dislike = () => {\r\n        let email;\r\n\r\n        if (!!firebase.auth().currentUser){\r\n            email = firebase.auth().currentUser.email\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n        let userNotifications = [];\r\n        let newNotification = [];\r\n\r\n        const tweetLikesDB = firebase.database().ref().child(\"tweets\").child(this.state.tweetId).child(\"likes\");\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n\r\n        let loggedUser = \"\";\r\n        let likes = [];\r\n\r\n        usersDB.once(\"value\", data =>{\r\n            const users = data.val();\r\n            const keys = Object.keys(users);\r\n\r\n            for (let i = 0; i < keys.length; i++){\r\n                if (email === users[keys[i]][\"email\"]) {\r\n                    loggedUser = users[keys[i]][\"id\"];\r\n                }\r\n\r\n                //GET DISLIKED TWEET USER NOTIFICATIONS\r\n                if (this.state.user === users[keys[i]][\"id\"]){\r\n                    userNotifications = users[keys[i]][\"notifications\"];\r\n                }\r\n            }\r\n\r\n            /////DELETE LIKE NOTIFICATION\r\n            if (!userNotifications){\r\n                userNotifications = [];\r\n            } else if (userNotifications.length === 1) {\r\n                userNotifications = []\r\n            } else {\r\n                userNotifications = userNotifications.filter(notification => {\r\n                    return !(notification[0] === loggedUser && notification[4] === this.state.tweetId)\r\n                })\r\n            }\r\n\r\n            if (loggedUser !== this.state.user) {\r\n            usersDB.child(this.state.user).child(\"notifications\").set(userNotifications)\r\n            }\r\n            //////////////////////////////\r\n\r\n        }).then(() => {\r\n\r\n            tweetLikesDB.once(\"value\", data => {\r\n                likes = data.val()\r\n                if (likes.length === 1) {\r\n                    likes = [];\r\n                } else {\r\n                    likes = likes.filter(userid => {\r\n                        return userid !== loggedUser\r\n                    });\r\n                }\r\n            }).then(x =>{\r\n                tweetLikesDB.set(likes)\r\n                this.setState({\r\n                    likedByLogged: false,\r\n                    likesNumber: this.state.likesNumber-1\r\n                })\r\n            })\r\n\r\n        })\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n    retweet =() => {\r\n        \r\n        let email;\r\n\r\n        if (!!firebase.auth().currentUser){\r\n            email = firebase.auth().currentUser.email\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const tweetRetweetedDB = firebase.database().ref().child(\"tweets\").child(this.state.tweetId).child(\"retweetedBy\");\r\n        \r\n        let loggedUser = \"\";\r\n\r\n        let userNotifications = [];\r\n        let newNotification = [];\r\n\r\n\r\n        Swal.fire({\r\n            title: 'Wanna retweet this?',\r\n            type: 'info',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#1da1f2',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Retweet'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n\r\n                usersDB.once(\"value\", data =>{\r\n                    const users = data.val();\r\n                    const keys = Object.keys(users);\r\n                    let count = 0;\r\n        \r\n                    for (let i = 0; i < keys.length; i++){\r\n                        if (count === 2) break;\r\n                        if (users[keys[i]][\"email\"] === email) {\r\n                            loggedUser = users[keys[i]][\"id\"];\r\n                            newNotification[0] = users[keys[i]][\"id\"];\r\n                            count++\r\n                        }\r\n\r\n                        if (users[keys[i]][\"id\"] === this.state.user) {\r\n                            userNotifications = users[keys[i]][\"notifications\"];\r\n                            count++\r\n                        }\r\n                    }\r\n\r\n                    newNotification[1] = new Date().toISOString();\r\n                    newNotification[2] = 0;\r\n                    newNotification[3] = \"retweet\";\r\n                    newNotification[4] = this.state.tweetId;\r\n\r\n                    // newNotification = [user, date, 0, like, twID]\r\n\r\n                    if (!userNotifications) {\r\n                        userNotifications = [newNotification]\r\n                    } else {\r\n                        userNotifications.push(newNotification)\r\n                    }\r\n\r\n        \r\n                    \r\n                }).then(x =>{\r\n                    tweetRetweetedDB.once(\"value\", data =>{\r\n                        let retweetedBy = data.val()\r\n                        const retweetDate = new Date().toISOString();\r\n                        const newRetweet = [loggedUser, retweetDate];\r\n                     \r\n                        if (!retweetedBy) {\r\n                            retweetedBy = [newRetweet];\r\n                        } else {\r\n                            retweetedBy.push(newRetweet);\r\n                        }\r\n        \r\n                        tweetRetweetedDB.set(retweetedBy);\r\n                        usersDB.child(this.state.user).child(\"notifications\").set(userNotifications);\r\n        \r\n                    }).then(x=>{\r\n                        Swal.fire(\r\n                            'Retweeted!',\r\n                            \"\",\r\n                            'success'\r\n                          )\r\n                          this.setState({\r\n                              retweetedByNumber: this.state.retweetedByNumber+1\r\n                          })\r\n                    })\r\n        \r\n        \r\n                })\r\n\r\n\r\n              \r\n            }\r\n          })\r\n\r\n        \r\n\r\n    }\r\n\r\n    deleteTweet = () =>{\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const tweetsDB = firebase.database().ref().child(\"tweets\");\r\n        let sameUser = false;\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n                usersDB.once(\"value\", data => {\r\n                    const users = data.val();\r\n                    const keys = Object.keys(users);\r\n        \r\n                    for (let i = 0; i < keys.length; i++){\r\n                        if (this.state.loggedUser === users[keys[i]][\"id\"]) {\r\n                            sameUser = true;\r\n                            break;\r\n                        }\r\n                    }\r\n        \r\n                    if (sameUser == false) return null;\r\n        \r\n                    //THIS DELETES TWEET.\r\n                    tweetsDB.child(this.state.tweetId).set(null);\r\n        \r\n                }).then( () => {\r\n                    this.setState({\r\n                        deleted:true\r\n                    })\r\n                    Swal.fire(\r\n                        'Deleted!',\r\n                        'Your tweet has been deleted.',\r\n                        'success'\r\n                      )\r\n                })\r\n            }\r\n          })\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n     render(){   \r\n\r\n        if (this.state.deleted) return null;\r\n\r\n        let image;\r\n\r\n        if (!this.state.profilepic) {\r\n            image = \"https://firebasestorage.googleapis.com/v0/b/directorio-de-negocios-a257b.appspot.com/o/whitefondo.jpg?alt=media&token=22ddf22f-d657-43d7-a472-c115e58c1812\";\r\n        } else {\r\n            image = this.state.profilepic;\r\n        }\r\n\r\n        return ( \r\n            <React.Fragment>\r\n                \r\n                <div className=\"Contenedor\">\r\n\r\n                { this.state.showRetweetedBy ?\r\n                <div className=\"retweetedBy\">\r\n                    <FontAwesomeIcon icon={faRetweet}/> <span>Retweet by {this.state.matchingRetweeted[this.state.matchingRetweeted.length-1][0]}</span>\r\n                </div> : null}\r\n\r\n                <div className=\"tweet-container\">            \r\n                    <div className=\"tweet-picture\">\r\n                        <img id=\"tweet-picture\" src={image}/>\r\n                    </div>\r\n\r\n                    <div className=\"tweet-inside-container\">\r\n                        <div className=\"tweet-top\">\r\n                            <Link to={`/${this.state.user}`}>\r\n                            <span className=\"tweet-userName\">{this.state.name} </span>\r\n                            </Link>\r\n                            <Link to={`/${this.state.user}`}>\r\n                            <span className=\"tweet-userId\">@{this.state.user}</span>\r\n                            </Link>\r\n                            <span className=\"tweet-date\">{this.state.showTime}</span>\r\n                        </div>\r\n\r\n                        <div className=\"tweet-mid\">\r\n                            <div className=\"tweet-mid-message\">\r\n                                {!!this.state.message.length ? this.state.message.map(word => word) : null}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"tweet-bot\">\r\n                            <div className=\"tweet-bot-icon\">\r\n                                <FontAwesomeIcon id=\"react-icon\" icon={faReply}/>\r\n                            </div>\r\n                            <div className=\"tweet-bot-icon\">\r\n                                <FontAwesomeIcon id=\"react-icon\" onClick={this.retweet}  icon={faRetweet}/>\r\n                                {this.state.retweetedByNumber > 0 ? <span>{this.state.retweetedByNumber}</span> : null}\r\n                            </div>\r\n                            <div className=\"tweet-bot-icon\">    \r\n                                {this.state.likedByLogged ? <FontAwesomeIcon id=\"react-icon\" className=\"liked-heart\" icon={faHeart} onClick={this.dislike} /> : <FontAwesomeIcon id=\"react-icon\" icon={faHeart} onClick={this.like} />}                                \r\n                                {this.state.likesNumber > 0 ? <span>{this.state.likesNumber}</span> : null}\r\n                            </div>\r\n                            <div className=\"tweet-bot-icon\">\r\n                                {this.state.loggedUser == this.state.user ? <FontAwesomeIcon id=\"react-icon\" onClick={this.deleteTweet} icon={faTrash}/> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );}\r\n }\r\n  \r\n export default Tweet;","import React, {Component} from 'react'\r\nimport firebase from \"firebase\";\r\n\r\nvar userData = {};\r\n\r\nclass WriteTweet extends Component {\r\n    state = { \r\n        tweet : \"\",\r\n        profilepic: false,\r\n        mentions: [],\r\n     }\r\n    refTweetText = React.createRef();\r\n    sendTweet=this.sendTweet.bind(this);\r\n    writeTweet=this.writeTweet.bind(this);\r\n    cleanState = this.cleanState.bind(this);\r\n\r\n    checkMention = () => {\r\n        const mentionRegex = /@\\w+/g;\r\n\r\n        if (!this.state.tweet.match(mentionRegex)) return null;\r\n\r\n        let users = this.state.tweet.match(mentionRegex);\r\n\r\n        for (let i = 0; i < users.length; i++){\r\n            users[i] = users[i].replace(\"@\", \"\");\r\n        }\r\n\r\n        return users;        \r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const email = firebase.auth().currentUser.email;\r\n        let profilepic = false;\r\n\r\n        usersDB.once(\"value\", data =>{\r\n            const users = data.val();\r\n            const keys = Object.keys(users);\r\n\r\n            for (let i = 0; i < keys.length; i++){\r\n                if (email === users[keys[i]][\"email\"]){\r\n                    if (!!users[keys[i]][\"profilepic\"]){\r\n                        profilepic = users[keys[i]][\"profilepic\"];\r\n                    } else {\r\n                        profilepic = \"https://cdn.britannica.com/67/197567-131-1645A26E.jpg\";\r\n                    }\r\n                }\r\n            }\r\n        }).then(() =>{\r\n            this.setState({\r\n                profilepic\r\n            })\r\n        })\r\n    }\r\n    cleanState(tweetData,tweetId){\r\n        this.props.refreshRender(tweetData,tweetId);\r\n        this.setState({\r\n            tweet: \"\"\r\n        })\r\n    }\r\n\r\n    writeTweet(){\r\n        this.setState({\r\n            tweet : this.refTweetText.current.value\r\n        })\r\n    }\r\n\r\n    sendTweet(){\r\n        const tweetMessage= this.state.tweet;\r\n        const mentionedUsers = this.checkMention();\r\n\r\n        let newNotification = [];\r\n        let usersNotifications = {};\r\n        let oldNotifications = [];        \r\n\r\n        if (tweetMessage.length === 0) return null;\r\n\r\n        \r\n        const userEmail = firebase.auth().currentUser.email;\r\n        const tweetsDB = firebase.database().ref().child(\"tweets\")\r\n        const usersDB = firebase.database().ref().child(\"users\")\r\n        \r\n            usersDB.once(\"value\", data => {\r\n                const users = data.val();\r\n                const keys = Object.keys(users)\r\n\r\n                for (let i = 0; i < keys.length; i++){\r\n                    if (userEmail === users[keys[i]].email) {\r\n                        userData[\"email\"] = userEmail;\r\n                        userData[\"name\"] = users[keys[i]].firstName;\r\n                        userData[\"userId\"] = users[keys[i]].id;\r\n                    }\r\n\r\n                    if (!!mentionedUsers) {\r\n                        for (let j = 0; j < mentionedUsers.length; j++) {\r\n                            if (mentionedUsers[j] === users[keys[i]][\"id\"]) {\r\n                                usersNotifications[users[keys[i]][\"id\"]] = users[keys[i]][\"notifications\"];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }).then(x => {\r\n                const tweetDate= new Date().toISOString();\r\n                const tweetData = {\r\n                    date : tweetDate,\r\n                    email : userEmail,\r\n                    message : tweetMessage,\r\n                    name : userData[\"name\"],\r\n                    user: userData[\"userId\"]\r\n                }\r\n                const tweetId = tweetsDB.push().key;\r\n                tweetData[\"tweetId\"] = tweetId;\r\n                tweetsDB.child(tweetId).update(tweetData)\r\n\r\n                //NOTIFICATION TO MENTIONED USERS\r\n                if (!!mentionedUsers) {\r\n                    for (let i = 0; i < mentionedUsers.length; i++){\r\n                        newNotification[0] = mentionedUsers[i];\r\n                        newNotification[1] = new Date().toISOString()\r\n                        newNotification[2] = 0;\r\n                        newNotification[3] = \"mention\";\r\n                        newNotification[4] = tweetId;\r\n\r\n                        oldNotifications = usersNotifications[mentionedUsers[i]];\r\n\r\n                        if (!oldNotifications) {\r\n                            oldNotifications = [newNotification];\r\n                        } else {\r\n                            oldNotifications.push(newNotification)\r\n                        };\r\n\r\n                        //HASOWNPROPERTY CHECKS IF USER EXISTS, IF IT DOES. IT SENDS NOTIFICATION\r\n                        //CHECKS IF THE USER WHO WROTE THE TWEET IS MENTIONED, THEN NO NOTIFICATION WILL BE SEND.\r\n\r\n\r\n                        if (userData[\"userId\"] === newNotification[0] ||\r\n                         !usersNotifications.hasOwnProperty(newNotification[0])) {\r\n\r\n                        } else {\r\n                        usersDB.child(newNotification[0]).child(\"notifications\").set(oldNotifications);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.cleanState(tweetData,tweetId)            \r\n            })\r\n        \r\n        \r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() { \r\n\r\n        let image;\r\n\r\n        if (!this.state.profilepic) {\r\n            image = \"https://firebasestorage.googleapis.com/v0/b/directorio-de-negocios-a257b.appspot.com/o/whitefondo.jpg?alt=media&token=22ddf22f-d657-43d7-a472-c115e58c1812\";\r\n        } else {\r\n            image = this.state.profilepic;\r\n        }\r\n\r\n\r\n        return ( \r\n            <div className=\"write-container\">\r\n                <div className=\"write-picture-container\">\r\n                <img id=\"write-profile-picture\" src={image}/>\r\n                </div>\r\n                \r\n                <div className=\"write-input-container\">\r\n                    <textarea ref={this.refTweetText} onChange={this.writeTweet} value={this.state.tweet} maxLength=\"250\" className=\"write-input\" type=\"text\" placeholder=\"What's happening?\" />\r\n                    <div className=\"write-bottom-container\">\r\n                        <button type=\"button\" className=\"write-tweet\" onClick={this.sendTweet}>Tweet</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WriteTweet;","import React, { Component } from 'react';\r\nimport Tweet from './Tweet';\r\nimport firebase from \"firebase\";\r\nimport WriteTweet from './WriteTweet';\r\nimport { faTintSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass TimeLine extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { \r\n          loading: false,\r\n          following: [],\r\n          userPage: true,\r\n          tweetsToShow: [],\r\n          updated: false,\r\n          pageChanged:false,\r\n          userData: {},\r\n          newTweets: [],\r\n      }\r\n\r\n      this.refreshRender=this.refreshRender.bind(this)\r\n      this.searchTweets=this.searchTweets.bind(this)\r\n      this.matchUsers=this.matchUsers.bind(this)\r\n      this.matchUsersRetweet=this.matchUsersRetweet.bind(this)\r\n      this.reRender = this.reRender.bind(this)\r\n      this.searchOneTweet= this.searchOneTweet.bind(this)\r\n      \r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n      const tweetRegex = new RegExp (\"/tweet\");\r\n      const pathname = window.location.pathname;\r\n      if (tweetRegex.test(pathname)){\r\n         this.searchOneTweet();\r\n        } else {\r\n      this.searchTweets()\r\n    }\r\n    }\r\n         \r\n     reRender(tweetsToShow, userPage){         \r\n       this.setState({tweetsToShow, updated:true, pageChanged: false, userPage})\r\n     }\r\n    \r\n\r\n\r\n\r\n     //THIS IS FOR UPDATING 1 TWEET, WHEN WRITTEN AND SENT.\r\n     refreshRender(tweetData, tweetId){\r\n       this.setState({\r\n         newTweets: [tweetData,...this.state.newTweets]\r\n       })\r\n    }\r\n    //////////////////////////////////////////////////////////\r\n\r\n\r\n    searchOneTweet(){\r\n      //THIS IS WHEN YOU NEED ONLY 1 TWEET IN THE TIMELINE\r\n      //WHEN YOU ARE REDIRECTED FROM THE NOTIFICATIONS\r\n      const id = window.location.pathname.replace(\"/tweet/\", \"\");\r\n\r\n      let tweetsToShow = [];\r\n\r\n        var userData = {};\r\n\r\n      const tweetsDB = firebase.database().ref().child(\"tweets\");\r\n      const usersDB = firebase.database().ref().child(\"users\");\r\n\r\n      tweetsDB.once(\"value\", data => {\r\n        let tweets = data.val()\r\n        const keys = Object.keys(tweets)\r\n        let count = 0;\r\n        let approved;\r\n        for (let i = 0; i < keys.length; i++){\r\n\r\n          if (count === 1) break;\r\n\r\n          approved = false;\r\n          \r\n\r\n          if (tweets[keys[i]][\"tweetId\"] === id) {\r\n\r\n            approved = true;\r\n            count++;\r\n\r\n            //GET USER OF TWEET\r\n            userData[\"id\"] = tweets[keys[i]][\"user\"];\r\n            \r\n            \r\n            //CHECK HOW MANY LIKES\r\n            if (!!tweets[keys[i]][\"likes\"]){\r\n              tweets[keys[i]][\"likesNumber\"]= tweets[keys[i]][\"likes\"].length;\r\n            } else {\r\n              tweets[keys[i]][\"likesNumber\"]= 0;\r\n            }\r\n\r\n            //NUMBER OF RETWEETS\r\n            if(!!tweets[keys[i]][\"retweetedBy\"]) {\r\n              tweets[keys[i]][\"retweetedByNumber\"] = tweets[keys[i]][\"retweetedBy\"].length;\r\n            }\r\n\r\n            //ORDERING DATE\r\n            tweets[keys[i]][\"orderingDate\"] = tweets[keys[i]][\"date\"];\r\n\r\n            //SHOWRETWEETEDBY\r\n            tweets[keys[i]][\"showRetweetedBy\"] = false;\r\n\r\n          } \r\n\r\n          if (approved) {\r\n          tweetsToShow.push(tweets[keys[i]])\r\n          }\r\n        }      \r\n        \r\n      \r\n      },error => {console.log(error)}).then(() => {\r\n\r\n        usersDB.once(\"value\", data => {\r\n          const users = data.val();\r\n          const keys = Object.keys(users)\r\n\r\n          userData[\"userPage\"] = true;            \r\n          \r\n \r\n          for (let i = 0; i < keys.length; i++) {\r\n              if (userData[\"id\"] === users[keys[i]][\"id\"] ) {\r\n                  userData[\"email\"] = users[keys[i]].email\r\n                  userData[\"name\"] = users[keys[i]].firstName\r\n                  userData[\"following\"] = [id];\r\n              }\r\n          }\r\n         \r\n      }).then(x =>{\r\n\r\n        this.reRender(tweetsToShow, userData[\"userPage\"]);\r\n      \r\n    })\r\n\r\n\r\n      })\r\n           \r\n\r\n          \r\n    }\r\n\r\n    searchTweets() {\r\n        let tweetsToShow = [];\r\n\r\n        var userData = {};\r\n\r\n      const tweetsDB = firebase.database().ref().child(\"tweets\");\r\n      const usersDB = firebase.database().ref().child(\"users\");\r\n           \r\n\r\n          usersDB.once(\"value\", data => {\r\n            const users = data.val();\r\n            const keys = Object.keys(users)\r\n\r\n            const id = window.location.pathname.replace(\"/twitter-clone/\", \"\");\r\n            userData[\"userPage\"] = id.length > 1;            \r\n            \r\n\r\n            let userEmail;\r\n            if (!userData[\"userPage\"]){     \r\n            userEmail = firebase.auth().currentUser.email;\r\n            }\r\n            \r\n            \r\n            \r\n\r\n            if (userData[\"userPage\"]) {\r\n              for (let i = 0; i < keys.length; i++) {\r\n                if (id === users[keys[i]][\"id\"] ) {\r\n                    userData[\"email\"] = users[keys[i]].email\r\n                    userData[\"name\"] = users[keys[i]].firstName\r\n                    userData[\"id\"] = users[keys[i]].id\r\n                    userData[\"following\"] = [id];\r\n                }\r\n            }\r\n\r\n            } else {\r\n\r\n              for (let i = 0; i < keys.length; i++) {\r\n                \r\n                  if (userEmail === users[keys[i]][\"email\"] ) {\r\n                      userData[\"email\"] = users[keys[i]].email\r\n                      userData[\"name\"] = users[keys[i]].firstName\r\n                      userData[\"id\"] = users[keys[i]].id\r\n                      userData[\"following\"] = users[keys[i]].following;\r\n                  }\r\n              }\r\n            }\r\n\r\n\r\n            //THIS ADD TO FOLLOWING IS FOR SHOWING OWN USER'S TWEETS\r\n            if (typeof(userData[\"following\"]) === \"undefined\") {\r\n              userData[\"following\"] = [userData[\"id\"]];\r\n            } else {\r\n              userData[\"following\"].push(userData[\"id\"]);\r\n            }            \r\n        }).then(x =>{\r\n\r\n            tweetsDB.once(\"value\", data => {\r\n              let tweets = data.val()\r\n              const keys = Object.keys(tweets)\r\n              let count = 0;\r\n              let approved;\r\n              for (let i = 0; i < keys.length; i++){\r\n\r\n                approved = false;\r\n                \r\n\r\n                if (this.matchUsers(userData[\"following\"],tweets[keys[i]][\"user\"])) {\r\n\r\n                  approved = true;\r\n\r\n                  \r\n                  \r\n                  //CHECK HOW MANY LIKES\r\n                  if (!!tweets[keys[i]][\"likes\"]){\r\n                    tweets[keys[i]][\"likesNumber\"]= tweets[keys[i]][\"likes\"].length;\r\n                  } else {\r\n                    tweets[keys[i]][\"likesNumber\"]= 0;\r\n                  }\r\n\r\n                  //NUMBER OF RETWEETS\r\n                  if(!!tweets[keys[i]][\"retweetedBy\"]) {\r\n                    tweets[keys[i]][\"retweetedByNumber\"] = tweets[keys[i]][\"retweetedBy\"].length;\r\n                  }\r\n\r\n                  \r\n                  tweets[keys[i]][\"orderingDate\"] = tweets[keys[i]][\"date\"];\r\n\r\n                  //SHOWRETWEETEDBY\r\n                  tweets[keys[i]][\"showRetweetedBy\"] = false;\r\n\r\n                  //PUSH FOUND TWEET\r\n                  /* tweetsToShow.push(tweets[keys[i]])\r\n                  count++; */\r\n                } \r\n\r\n                \r\n                if (this.matchUsersRetweet(userData[\"following\"],tweets[keys[i]][\"retweetedBy\"])) {\r\n\r\n                  approved = true;\r\n\r\n\r\n                  //CHECK HOW MANY LIKES\r\n                  if (!!tweets[keys[i]][\"likes\"]){\r\n                    tweets[keys[i]][\"likesNumber\"]= tweets[keys[i]][\"likes\"].length;\r\n                  } else {\r\n                    tweets[keys[i]][\"likesNumber\"]= 0;\r\n                  }\r\n\r\n                  //NUMBER OF RETWEETS\r\n                  if(!!tweets[keys[i]][\"retweetedBy\"]) {\r\n                    tweets[keys[i]][\"retweetedByNumber\"] = tweets[keys[i]][\"retweetedBy\"].length;\r\n                  }\r\n\r\n                  var matches = this.matchUsersRetweet(userData[\"following\"],tweets[keys[i]][\"retweetedBy\"]);\r\n                  \r\n                  tweets[keys[i]][\"matchingRetweeted\"] = matches;\r\n\r\n                  //ITS SUPPOSED TO TAKE THE LAST DATE\r\n                  tweets[keys[i]][\"orderingDate\"] = matches[matches.length-1][1];\r\n                  \r\n                  //SHOWRETWEETEDBY\r\n                  tweets[keys[i]][\"showRetweetedBy\"] = true;\r\n\r\n                  //PUSH FOUND TWEET\r\n                 \r\n                }\r\n\r\n                if (approved) {\r\n                tweetsToShow.push(tweets[keys[i]])\r\n                  count++;\r\n                }\r\n              }      \r\n              \r\n            \r\n            },error => {console.log(error)})\r\n            .then( x => {\r\n            this.reRender(tweetsToShow, userData[\"userPage\"]);\r\n          })\r\n\r\n        })\r\n\r\n\r\n           \r\n      \r\n    }\r\n\r\n    matchUsers(userId, tweetUser) { \r\n      if (typeof(userId) === \"string\") userId = [userId];\r\n      return Boolean(userId.find(userId =>{\r\n        return userId === tweetUser\r\n      }))\r\n    }\r\n\r\n    matchUsersRetweet(following, retweetedBy) { \r\n\r\n      if (!retweetedBy) return false;\r\n\r\n      let matchs = [];\r\n      var found = undefined;\r\n\r\n      for (let i = 0; i<retweetedBy.length; i++){\r\n        found = following.find(followingUser =>{\r\n          return followingUser === retweetedBy[i][0]\r\n        })\r\n        if (!!found) {\r\n          matchs.push(retweetedBy[i])\r\n        }\r\n      }\r\n\r\n      if (matchs.length === 0) {\r\n        return false;\r\n      }\r\n\r\n      return matchs;\r\n    }\r\n    \r\n\r\n    \r\n    render() { \r\n  \r\n            // SORTING FROM DATE\r\n            var showingTweets = this.state.tweetsToShow.sort( (a,b) => {       \r\n              var timeA = new Date(a[\"orderingDate\"]).getTime()\r\n              var timeB = new Date(b[\"orderingDate\"]).getTime()\r\n              return timeB - timeA;\r\n              })\r\n\r\n              var showingNewTweets = this.state.newTweets;\r\n\r\n        return ( \r\n            <div className=\"timeLine-container\">\r\n\r\n              {this.state.userPage ?  null : <WriteTweet refreshRender={this.refreshRender}/>}\r\n\r\n              {showingNewTweets.map((tweet,i) => {            \r\n                      return (\r\n                          <Tweet key={tweet.tweetId} tweet={tweet}/>\r\n                      )\r\n                  })\r\n              }\r\n\r\n              {showingTweets.map((tweet,i) => {           \r\n                      return (\r\n                          <Tweet key={i} tweet={tweet} />\r\n                      )\r\n                  })\r\n              }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TimeLine;","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\n\r\nclass UserBox extends Component {\r\n    state = { \r\n        name: \"\",\r\n        id: \"\",\r\n        following: \"\",\r\n        followers : \"\",\r\n        tweetCount: \"\",\r\n        profilepic: false,\r\n        coverpic: false,\r\n     }\r\n\r\n     componentDidMount(){\r\n         const usersDB = firebase.database().ref().child(\"users\");\r\n         const tweetsDB = firebase.database().ref().child(\"tweets\");\r\n         const email = firebase.auth().currentUser.email;\r\n\r\n         function fromUndefinedToZero (data) {\r\n            if (typeof(data) === \"undefined\") return 0;\r\n            return data.length;\r\n        }\r\n\r\n         let name = \"\",\r\n            id = \"\",\r\n            following = \"\",\r\n            followers = \"\",\r\n            tweetCount = 0,\r\n            profilepic = false,\r\n            coverpic = false;\r\n\r\n         usersDB.once(\"value\", data => {\r\n            const users = data.val();\r\n            const keys = Object.keys(users);\r\n\r\n            for (let i = 0; i < keys.length; i++){\r\n                if (email === users[keys[i]][\"email\"]) {\r\n                    name = users[keys[i]][\"firstName\"];\r\n                    id = users[keys[i]][\"id\"];\r\n                    following = fromUndefinedToZero(users[keys[i]][\"following\"]);\r\n                    followers = fromUndefinedToZero(users[keys[i]][\"followers\"]);\r\n                    profilepic = users[keys[i]][\"profilepic\"]\r\n                    coverpic = users[keys[i]][\"coverpic\"]\r\n                    break;                    \r\n                }\r\n            }\r\n         }).then(x => {\r\n            tweetsDB.once(\"value\", data => {\r\n                const tweets = data.val();\r\n                const keys = Object.keys(tweets);\r\n\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (email === tweets[keys[i]][\"email\"]) {\r\n                        tweetCount++;\r\n                    }\r\n                }\r\n            }).then(x => {\r\n                if (!profilepic) {\r\n                    profilepic = \"https://cdn.britannica.com/67/197567-131-1645A26E.jpg\"\r\n                }\r\n                if (!coverpic) {\r\n                    coverpic = \"https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\"\r\n                }\r\n                this.setState({\r\n                    name, id, following, followers, tweetCount, profilepic, coverpic\r\n                })\r\n            })\r\n         })\r\n     }\r\n\r\n\r\n    render() {   \r\n\r\n        let image;\r\n\r\n        if (!this.state.coverpic) {\r\n            image= \"https://firebasestorage.googleapis.com/v0/b/directorio-de-negocios-a257b.appspot.com/o/whitefondo.jpg?alt=media&token=22ddf22f-d657-43d7-a472-c115e58c1812\";\r\n        } else {\r\n            image = this.state.coverpic\r\n        }\r\n\r\n        const style = {\r\n            height: 95+\"px\",\r\n            width: 100+\"%\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${image})`,\r\n        }\r\n        \r\n        return (\r\n            <div className=\"userBox-container\">\r\n                    \r\n                    <div className=\"userBox-background\" style={style}></div>\r\n\r\n                <div className=\"userBox-content\">\r\n                    <div className=\"userBox-content-top\">\r\n                                <div className=\"userBox-content-picture\">\r\n                                    <picture>\r\n                                        {\r\n                                        this.state.profilepic ?\r\n                                        <img id=\"profile-picture\" src={this.state.profilepic}/> :\r\n                                        <img id=\"profile-picture\" src=\"https://firebasestorage.googleapis.com/v0/b/directorio-de-negocios-a257b.appspot.com/o/whitefondo.jpg?alt=media&token=22ddf22f-d657-43d7-a472-c115e58c1812\"/>\r\n                                        }\r\n                                    </picture>\r\n                                </div>\r\n                        <div className=\"userBox-content-right\">\r\n                            <Link to={`${this.state.id}`}>\r\n                                <div id=\"userBox-name\" className=\"userBox-content-name\">{this.state.name}</div>\r\n                                <div id=\"userBox-userId\" className=\"userBox-content-userId\">@{this.state.id}</div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"userBox-content-information\">\r\n                       <Link to={\"\"} >\r\n                            <div className=\"userBox-content-tweets\">\r\n                                <h5 id=\"userBox-information\">Tweets</h5>\r\n                                <h5 id=\"userBox-number\">{this.state.tweetCount} </h5>\r\n                            </div> \r\n                        </Link>\r\n\r\n                        <Link to={\"\"}> \r\n                            <div className=\"userBox-content-following\">\r\n                                <h5 id=\"userBox-information\">Following</h5>\r\n                                <h5 id=\"userBox-number\">{this.state.following} </h5>\r\n                            </div> </Link>\r\n                        <Link to={\"\"}>\r\n                            <div className=\"userBox-content-followers\">\r\n                                <h5 id=\"userBox-information\">Followers</h5>\r\n                                <h5 id=\"userBox-number\">{this.state.followers} </h5>\r\n                            </div> \r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default UserBox;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch, faPeopleCarry, faComment as faReply} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n    logIn = this.logIn.bind(this);\r\n\r\n    emailRef = React.createRef()\r\n    passwordRef = React.createRef();\r\n\r\n    logIn(e){\r\n        e.preventDefault();\r\n\r\n        const email = this.emailRef.current.value;\r\n        const password = this.passwordRef.current.value;\r\n\r\n        this.props.logIn(email,password)\r\n    }\r\n\r\n    render(){\r\n            return (  \r\n            \r\n            <div className=\"landing-page-container\">\r\n                <div className=\"landing-page-left\">\r\n                    <div className=\"landing-page-left-text-container\">\r\n                        <div className=\"landing-page-left-1 landing-page-left-text\">\r\n                            <h3><FontAwesomeIcon icon={faSearch}/>    Twitter Clone</h3>\r\n                        </div>\r\n                        <div className=\"landing-page-left-2 landing-page-left-text\">\r\n                            <h3><FontAwesomeIcon icon={faPeopleCarry}/>    Made by:</h3>\r\n                        </div>\r\n                        <div className=\"landing-page-left-3 landing-page-left-text\">\r\n                            <h3><FontAwesomeIcon icon={faReply}/>    Ronny Legones</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"landing-page-right\">\r\n                    <div className=\"landing-page-login\">\r\n                        <form onSubmit={this.logIn}>\r\n                        <input className=\"login-input\" ref={this.emailRef} type=\"text\" placeholder=\"Email or Username\"/>\r\n                        <input className=\"login-input\" ref={this.passwordRef} type=\"password\" placeholder=\"Password\"/>\r\n                        <button className=\"login-btn\" type=\"submit\" >Login</button>                        \r\n                        </form>\r\n                        <p className=\"login-forgot\">Forgot your password?</p>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"landing-page-right-text-container\">\r\n                        <div className=\"landing-page-right-box\">\r\n                            <div className=\"landing-page-right-box-text\">\r\n                                <FontAwesomeIcon icon={faSearch}/>\r\n                                <h3 id=\"hola\">    Discover what is happening at this moment.</h3>\r\n                            </div>\r\n                            <div className=\"landing-page-right-box-join\">\r\n                                <h3 className=\"join-twitter\">Join Twitter today.</h3>\r\n                                <div className=\"landing-page-btn-signup\" onClick={this.props.toggleRegisterPopUp}>Sign Up</div>\r\n                                <div className=\"landing-page-btn-login\">Login</div>\r\n                            </div>\r\n                        </div>                    \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"landing-page-footer\">\r\n\r\n                </div>\r\n            </div>\r\n        );}\r\n}\r\n \r\nexport default LandingPage;","import React from 'react'\r\n\r\nclass RegisterPopUp extends React.Component {\r\n\r\n    register = this.register.bind(this)\r\n\r\n    refName= React.createRef()\r\n    refEmail= React.createRef()\r\n    refPassword= React.createRef()\r\n    refUserId = React.createRef()\r\n\r\n    register(e){\r\n        e.preventDefault()\r\n\r\n        const name=this.refName.current.value\r\n        const userId= this.refUserId.current.value\r\n        const email=this.refEmail.current.value\r\n        const password=this.refPassword.current.value\r\n\r\n        if (name.length < 2) {\r\n            window.alert(\"Your name is too short.\")\r\n            return null;\r\n        } else if (userId.length < 4) {\r\n            window.alert(\"Your user id is too short.\")\r\n            return null;\r\n        } else if (email.length < 5) {\r\n            window.alert (\"Your email is too short\")\r\n            return null;\r\n        } else if (password < 4){\r\n            window.alert(\"Your password is too short.\")\r\n            return null;\r\n        }\r\n\r\n        const registerData = {\r\n            name,\r\n            email,\r\n            password,\r\n            userId\r\n        }\r\n        \r\n        this.props.register(registerData);\r\n    }\r\n    render(){\r\n    return ( \r\n        <div className=\"register-popup-container\" >\r\n            <div className=\"register-popup-inner\">\r\n                <h1>Register</h1>\r\n                \r\n                <form onSubmit={this.register}>\r\n                    <div>\r\n                        <label>Name:</label>\r\n                        <input type=\"text\" maxLength={20} placeholder=\"your name\" ref={this.refName}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>User ID:</label>\r\n                        <input type=\"text\" maxLength={15} placeholder=\"your id\" ref={this.refUserId}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>E-mail:</label>\r\n                        <input type=\"email\" maxLength={30} placeholder=\"your email\" ref={this.refEmail}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Password:</label>\r\n                        <input type=\"text\" maxLength={16} placeholder=\"password\" ref={this.refPassword}/>\r\n                    </div>\r\n                <button type=\"submit\">Sign Up</button>\r\n                </form>\r\n                <button type=\"button\" onClick={this.props.toggleRegisterPopUp}>Close</button>\r\n            </div>\r\n        </div>\r\n     );}\r\n}\r\n \r\nexport default RegisterPopUp;","import React from 'react'\r\nimport UserBox from \"./UserBox\";\r\nimport TimeLine from \"./TimeLine\"\r\nimport firebase from \"firebase\";\r\n\r\nvar userData = {};\r\nvar propsSent = false;\r\nvar homeTweets = {};\r\nvar tweetMessage = \"\";\r\n\r\nclass LoggedLanding extends React.Component {    \r\n\r\n    componentWillMount(){\r\n\r\n    }\r\n   \r\n\r\n    render (){\r\n        const email = firebase.auth().currentUser.email\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const tweetsDB = firebase.database().ref().child(\"tweets\");\r\n\r\n        tweetsDB.once(\"value\", data => {\r\n            const tweets = data.val();\r\n            const keys = Object.keys(tweets);\r\n            let tweetCount = 0;\r\n            let tweetHomeCount = 0;\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (tweets[keys[i]].email === email) {\r\n                    tweetCount++;\r\n                }                \r\n            }\r\n\r\n            userData[\"tweetCount\"] = tweetCount;\r\n        })\r\n\r\n        \r\n        \r\n\r\n        usersDB.once(\"value\", data => {\r\n            const users = data.val()\r\n            const keys = Object.keys(users)\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n               if (users[keys[i]].email === email) {\r\n                   userData[\"email\"] = email;\r\n                   userData[\"name\"] = users[keys[i]].firstName;\r\n                   userData[\"userId\"] = users[keys[i]].id;\r\n                   userData[\"following\"] = users[keys[i]].following;\r\n                   userData[\"followers\"] = users[keys[i]].folowers;\r\n               }\r\n            }\r\n        }).catch(error => {console.log(error)})\r\n\r\n        //INTERVAL FOR LOADING INFO\r\n        if (!propsSent){\r\n            var interval = setInterval(x => {\r\n                if (Boolean(userData.name) || Boolean(userData.tweetCount)) {\r\n                    clearInterval(interval)\r\n                    propsSent = true;\r\n                    this.setState({})\r\n                }\r\n            }, 2000)\r\n        }\r\n        ////////////////////////////////////////////////////////////////////\r\n\r\n        return ( \r\n            \r\n            <React.Fragment>\r\n                <div className=\"app-container\">\r\n                                <div className=\"app-left\">\r\n                                <UserBox userData={userData}/>\r\n                                </div>\r\n                    \r\n                                <div className=\"app-mid\">\r\n                                <TimeLine userData={userData}/>\r\n                                </div>\r\n\r\n                                <div className=\"app-right\">\r\n                                </div>\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );}\r\n}\r\n \r\nexport default LoggedLanding;","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return ( \r\n        <div className=\"loading\">\r\n            <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Loading;","import React, { Component } from 'react';\r\nimport firebase from \"firebase\";\r\n\r\nclass FollowButton extends Component {\r\n    state = {  }\r\n    follow = this.follow.bind(this)\r\n\r\n    follow(){\r\n        this.props.follow();\r\n    }\r\n\r\n    render() { \r\n        \r\n        return ( \r\n            <div className=\"follow-unfollow\">\r\n            <span className=\"follow-button\" onClick={this.follow}>Follow</span>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default FollowButton;","import React, { Component } from 'react';\r\nimport firebase from \"firebase\";\r\n\r\nclass UnfollowButton extends Component {\r\n    state = {  }\r\n\r\n    unfollow = this.unfollow.bind(this)\r\n\r\n    unfollow(){\r\n        this.props.unfollow();\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"follow-unfollow\">\r\n            <span className=\"unfollow-button\" onClick={this.unfollow}>Unfollow</span>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default UnfollowButton;","import React, { Component } from 'react';\r\nimport firebase from \"firebase\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport UnfollowButton from \"./UnfollowButton\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass UserBoxInUserPage extends Component {\r\n    state = { \r\n        name: \"\",\r\n        id: \"\",\r\n        following: \"\",\r\n        followers: \"\",\r\n        tweetCount: \"\",\r\n        notFound: false,\r\n        followingButton: -1,\r\n        profilepic: false,\r\n        coverpic: false,\r\n     }\r\n\r\n    /* follow = this.follow.bind(this);\r\n    unfollow = this.unfollow.bind(this); */\r\n    sendToState = this.sendToState.bind(this)\r\n\r\n     sendToState(name, id, following, followers, tweetCount, followingButton,profilepic, coverpic){\r\n         this.setState({\r\n            name, id, following, followers, tweetCount, followingButton,profilepic, coverpic\r\n         })\r\n     }\r\n\r\n    componentDidMount(){\r\n\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const tweetsDB = firebase.database().ref().child(\"tweets\");\r\n        \r\n        let email = \"\";\r\n\r\n        let name = \"\",\r\n           id = window.location.pathname.replace(\"/twitter-clone/\", \"\"),\r\n           following = \"\",\r\n           followers = \"\",\r\n           tweetCount = 0,\r\n           followingButton = -1,\r\n           profilepic = false,\r\n           coverpic = false;\r\n\r\n           // -1 No loggeado\r\n           // 0 Sin seguir\r\n           // 1 Siguiendo\r\n        \r\n\r\n        function fromUndefinedToZero (data) {\r\n           if (typeof(data) === \"undefined\") return 0;\r\n           return data.length;\r\n       }\r\n\r\n        \r\n\r\n        usersDB.once(\"value\", data => {\r\n           const users = data.val();\r\n           const keys = Object.keys(users);\r\n\r\n           for (let i = 0; i < keys.length; i++){\r\n               if (id === users[keys[i]][\"id\"]) {\r\n                   name = users[keys[i]][\"firstName\"];\r\n                   following = fromUndefinedToZero(users[keys[i]][\"following\"]);\r\n                   followers = fromUndefinedToZero(users[keys[i]][\"followers\"]);\r\n                   email = users[keys[i]][\"email\"];\r\n                   profilepic = users[keys[i]][\"profilepic\"]\r\n                   coverpic = users[keys[i]][\"coverpic\"]                   \r\n                   break;                    \r\n               }\r\n           }\r\n\r\n          \r\n        }).then(x => {\r\n           tweetsDB.once(\"value\", data => {\r\n               const tweets = data.val();\r\n               const keys = Object.keys(tweets);\r\n\r\n               for (let i = 0; i < keys.length; i++) {\r\n                   if (email === tweets[keys[i]][\"email\"]) {\r\n                       tweetCount++;\r\n                   }\r\n               }\r\n           }).then(x => {\r\n\r\n            if (!profilepic) {\r\n                profilepic = \"https://cdn.britannica.com/67/197567-131-1645A26E.jpg\"\r\n            }\r\n            if (!coverpic) {\r\n                coverpic = \"https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\"\r\n            }\r\n\r\n                firebase.auth().onAuthStateChanged((user) => {       \r\n                    if (user) { \r\n                        const loggedEmail = firebase.auth().currentUser.email;\r\n        \r\n                        //FOLLOWING BUTTON ACTIVATION (OR NOT)\r\n                        usersDB.once(\"value\", data => {\r\n                            const users = data.val();\r\n                            const keys = Object.keys(users);\r\n\r\n                            for (let i = 0; i < keys.length; i++){\r\n                                if (loggedEmail === users[keys[i]][\"email\"]){\r\n\r\n                                    const userId = users[keys[i]][\"id\"];\r\n\r\n                                    if (id === users[keys[i]][\"id\"]) break;\r\n\r\n                                    if (typeof(users[keys[i]][\"following\"]) == \"undefined\"){\r\n                                        followingButton = 0;\r\n                                        break;\r\n                                    }\r\n                                    \r\n                                    \r\n                                    const following = users[keys[i]][\"following\"];\r\n                                    const followingKeys = Object.keys(users[keys[i]][\"following\"]);\r\n\r\n                                    for (let j = 0; j <followingKeys.length; j++) {\r\n                                        if (id === following[followingKeys[j]]) {\r\n                                            followingButton = 1;\r\n                                            break;\r\n                                        } else {\r\n                                            followingButton = 0;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            this.setState({\r\n                                name, id, following, followers, tweetCount, followingButton, profilepic, coverpic\r\n                             })\r\n\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            name, id, following, followers, tweetCount, followingButton, profilepic, coverpic\r\n                         })\r\n                    }\r\n                })\r\n           })\r\n        })\r\n    }\r\n\r\n    follow = () => {\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const email = firebase.auth().currentUser.email;\r\n\r\n        let userNotifications = [];\r\n        let newNotification = [];\r\n\r\n        //ID of the userPage\r\n        const id = this.state.id;\r\n\r\n        let following = undefined;\r\n        let followers = undefined;\r\n\r\n        let followingUser = \"\";\r\n\r\n        usersDB.once(\"value\", data => {\r\n            const users = data.val();\r\n            const keys = Object.keys(users)\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n\r\n                //ADDING TO FOLLOWING\r\n                if (users[keys[i]][\"email\"] === email) {\r\n                    following = users[keys[i]][\"following\"]\r\n                    followingUser = users[keys[i]][\"id\"];\r\n\r\n                    //Add the follower ID to the notifications\r\n                    newNotification[0] = users[keys[i]][\"id\"];\r\n                }\r\n\r\n                //GET NOTIFICATIONS OF FOLLOWED\r\n                if (id === users[keys[i]][\"id\"]) {\r\n                    userNotifications = users[keys[i]][\"notifications\"]\r\n                }\r\n            }\r\n\r\n            if (typeof(following) === \"undefined\") {\r\n                following = [id];\r\n            } else {\r\n                following.push(id);\r\n            }\r\n\r\n            //NOTIFICATIONS\r\n            newNotification[1] = new Date().toISOString();\r\n            newNotification[2] = 0;\r\n            newNotification[3] = \"follow\";\r\n            \r\n            if (!userNotifications){\r\n                userNotifications = [newNotification];\r\n            } else {\r\n                userNotifications.push(newNotification)\r\n            }\r\n\r\n            \r\n            usersDB.child(id).child(\"notifications\").set(userNotifications);\r\n\r\n            /////////////////////////\r\n\r\n            \r\n            for (let i = 0; i < keys.length; i++){\r\n\r\n                //ADDING TO FOLLOWERS\r\n                if (users[keys[i]][\"id\"] === id) {\r\n                    followers = users[keys[i]][\"followers\"];\r\n\r\n                    if (typeof(followers) === \"undefined\") {\r\n                        followers = [followingUser];\r\n                    } else {\r\n                        followers.push(followingUser);\r\n                    }\r\n                }                \r\n            }\r\n\r\n            usersDB.child(id).child(\"followers\").set(followers);\r\n            usersDB.child(followingUser).child(\"following\").set(following);\r\n            \r\n        }).then( x => {\r\n            this.setState({\r\n                followingButton:1,\r\n                followers: this.state.followers +1\r\n            })\r\n        })\r\n    }\r\n\r\n    unfollow =() => {\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const email = firebase.auth().currentUser.email;\r\n\r\n        let userNotifications = [];\r\n\r\n        const id = this.state.id;\r\n\r\n        let following = [];\r\n        let followers = [];\r\n\r\n        let followingUser = \"\";\r\n\r\n        usersDB.once(\"value\", data => {\r\n            const users = data.val();\r\n            const keys = Object.keys(users)\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n\r\n                //DELETE FROM FOLLOWING\r\n                if (users[keys[i]][\"email\"] === email) {\r\n                    following = users[keys[i]][\"following\"]\r\n                    followingUser = users[keys[i]][\"id\"];\r\n                }\r\n\r\n                //GET UNFOLLOWED NOTIFICATIONS\r\n                if (id === users[keys[i]][\"id\"]){\r\n                    userNotifications = users[keys[i]][\"notifications\"];\r\n                }\r\n            }\r\n\r\n            /// DELETE FOLLOW NOTIFICATIONS\r\n                if (!userNotifications) {\r\n                    userNotifications = [];\r\n                } else if (userNotifications.length === 1) {\r\n                    userNotifications = []\r\n                } else {\r\n                    userNotifications = userNotifications.filter(notification => {\r\n                        return !(notification[0] === followingUser && notification[3] === \"follow\")\r\n                    })\r\n                }\r\n\r\n                usersDB.child(id).child(\"notifications\").set(userNotifications)\r\n\r\n            ///////////////////////////////\r\n\r\n\r\n            if (following.length === 1) {\r\n                following = [];\r\n            } else {\r\n                following = following.filter(followedId => {\r\n                    return followedId !== id;\r\n                })\r\n            }\r\n\r\n            for (let i = 0; i < keys.length; i++){\r\n\r\n                //DELETE FROM FOLLOWERS\r\n                if (users[keys[i]][\"id\"] === id) {\r\n                    followers = users[keys[i]][\"followers\"];\r\n\r\n                    if (followers.length === 1) {\r\n                        followers = [];\r\n                    } else {\r\n                        followers.filter(followedId => {\r\n                            return followedId !== followingUser\r\n                        });\r\n                    }\r\n                }\r\n\r\n                \r\n            }\r\n\r\n            \r\n            usersDB.child(id).child(\"followers\").set(followers);\r\n            usersDB.child(followingUser).child(\"following\").set(following);\r\n            \r\n        }).then(x => {\r\n            this.setState({\r\n                followingButton:0,\r\n                followers: this.state.followers -1\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {                \r\n\r\n        return ( \r\n            <div className=\"userBoxUP-container\">\r\n                {/* PROFILE PIC HERE  */}\r\n                {this.state.profilepic ?\r\n                <img id=\"userBoxUP-image\" src={this.state.profilepic} alt=\"profile picture\"/> :\r\n                <img id=\"userBoxUP-image\" src=\"https://firebasestorage.googleapis.com/v0/b/directorio-de-negocios-a257b.appspot.com/o/whitefondo.jpg?alt=media&token=22ddf22f-d657-43d7-a472-c115e58c1812\" alt=\"profile picture\"/>}\r\n\r\n                <h3 id=\"userBoxUP-name\">{this.state.name}</h3>\r\n                <p id=\"userBoxUP-user\">@{this.state.id}</p>\r\n                <p id=\"userBoxUP-description\">Non editable description.</p>    \r\n\r\n                \r\n\r\n                {(this.state.followingButton === -1) ? null : ((this.state.followingButton === 0) ? <FollowButton follow={this.follow}/> : <UnfollowButton unfollow={this.unfollow}/>) }\r\n\r\n                    \r\n                    <div className=\"userBox-content-information userBoxInUserPage-content\">\r\n                       <Link to={\"\"} >\r\n                            <div className=\"userBox-content-tweets\">\r\n                                <h5 id=\"userBox-information\">Tweets</h5>\r\n                                <h5 id=\"userBox-number\">{this.state.tweetCount} </h5>\r\n                            </div> \r\n                        </Link>\r\n\r\n                        <Link to={\"\"}> \r\n                            <div className=\"userBox-content-following\">\r\n                                <h5 id=\"userBox-information\">Following</h5>\r\n                                <h5 id=\"userBox-number\">{this.state.following} </h5>\r\n                            </div> </Link>\r\n                        <Link to={\"\"}>\r\n                            <div className=\"userBox-content-followers\">\r\n                                <h5 id=\"userBox-information\">Followers</h5>\r\n                                <h5 id=\"userBox-number\">{this.state.followers} </h5>\r\n                            </div> \r\n                        </Link>\r\n                    </div>\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default UserBoxInUserPage;","import React, { Component } from 'react';\r\nimport TimeLine from \"./TimeLine\";\r\nimport firebase from \"firebase\";\r\nimport UserBoxInUserPage from './UserBoxInUserPage';\r\n\r\n\r\nclass UserPage extends Component {\r\n    state = { \r\n        loaded : false,\r\n        coverpic: false,\r\n     }\r\n\r\n     componentDidMount(){\r\n\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n        const id = this.props.id;\r\n        let coverpic = false;\r\n\r\n        usersDB.once(\"value\", data => {\r\n            const users = data.val();\r\n            const keys = Object.keys(users)\r\n            \r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (id === users[keys[i]][\"id\"]) {\r\n                    if (!!users[keys[i]][\"coverpic\"]) {\r\n                        coverpic = users[keys[i]][\"coverpic\"]\r\n                    }\r\n                   \r\n                }\r\n\r\n            }\r\n        }).then(() => {\r\n            if (!coverpic) {\r\n                coverpic = \"https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\"\r\n            }\r\n        this.setState({\r\n                    coverpic\r\n               })\r\n        })\r\n     }\r\n\r\n    render() { \r\n        let image;\r\n\r\n        if (!this.state.coverpic) {\r\n            image= \"https://firebasestorage.googleapis.com/v0/b/directorio-de-negocios-a257b.appspot.com/o/whitefondo.jpg?alt=media&token=22ddf22f-d657-43d7-a472-c115e58c1812\";\r\n        } else {\r\n            image = this.state.coverpic\r\n        }\r\n\r\n        \r\n\r\n        const style = {\r\n            height: 300+\"px\",\r\n            width: 100+\"%\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${image})`,\r\n            backgroundColor: \"white\",\r\n            marginTop: \"50px\"\r\n        }\r\n        return ( \r\n            <React.Fragment>  \r\n\r\n                <div className=\"userpage-background\" style={style}></div>             \r\n\r\n                <div className=\"app-container app-container-userPage\">\r\n\r\n                \r\n                                    <div className=\"app-left\">\r\n                                    <UserBoxInUserPage/>\r\n                                    </div>\r\n                        \r\n                                    <div className=\"app-mid\">\r\n                                    <TimeLine/>\r\n                                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default UserPage;","import React, { Component } from 'react';\r\nimport firebase from \"firebase\";\r\n\r\nclass ChangeThings extends Component {\r\n    state = { \r\n        profilePic: \"\",\r\n        coverPic: \"\",\r\n        loading: \"\",\r\n        completed: false,\r\n        filesToUpload: 0,\r\n        uploadedFiles: 0,\r\n        profileLink: \"\",\r\n        coverLink: \"\",\r\n     }\r\n\r\n    profilePicHandler = (e) => {\r\n\r\n         const profilePicFile = e.target.files[0]\r\n\r\n         if (profilePicFile.type === \"image/png\" || profilePicFile.type === \"image/jpeg\" ){\r\n\r\n            if (profilePicFile.size > 1000000) {\r\n               window.alert(\"Please use a lower size image for the profile pic\")\r\n            } else {\r\n                 this.setState({\r\n                    profilePic: profilePicFile\r\n                })\r\n            }\r\n            \r\n         } else {\r\n             window.alert(\"Please use png or jpeg.\")\r\n             e.target.value = null;\r\n         }\r\n\r\n         \r\n     }\r\n\r\n    coverPicHandler = (e) => {\r\n        const coverPicFile = e.target.files[0]\r\n\r\n         if (coverPicFile.type === \"image/png\" || coverPicFile.type === \"image/jpeg\" ){\r\n            \r\n            if (coverPicFile.size > 1000000) {\r\n                window.alert(\"Please use a lower size image for the cover pic\")\r\n            } else {\r\n                this.setState({\r\n                    coverPic: coverPicFile\r\n                })\r\n            }\r\n            \r\n            \r\n         } else {\r\n             window.alert(\"Please use png or jpeg.\")\r\n             e.target.value = null;\r\n         }\r\n\r\n\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////\r\n\r\n    upload = (e) => {\r\n        const profilePic = this.state.profilePic;\r\n        const coverPic = this.state.coverPic;   \r\n\r\n        const usersDB = firebase.database().ref().child(\"users\");\r\n\r\n        const email = firebase.auth().currentUser.email;\r\n        const profileStorageRef = firebase.storage().ref(`/${email}/profilepics/${profilePic.name}`)\r\n        const coverStorageRef = firebase.storage().ref(`/${email}/coverpics/${coverPic.name}`)\r\n        \r\n\r\n\r\n        if (typeof(this.state.profilePic) === \"object\" && typeof(this.state.coverPic) === \"object\"){\r\n\r\n            this.setState({filesToUpload: 2})\r\n            \r\n             profileStorageRef.put(profilePic).on(\"state_changed\",snapshot => {\r\n                let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                this.setState({loading: percentage})\r\n\r\n            }, error => {\r\n                console.log(error);  \r\n\r\n            }, () => {\r\n                //UPLOAD PROFILEPIC LINK\r\n                usersDB.once(\"value\", data => {\r\n                    const users = data.val();\r\n                    const keys = Object.keys(users);\r\n\r\n                    profileStorageRef.getDownloadURL().then((url) => {\r\n                        for (let i = 0; i < keys.length; i++){\r\n                            if (users[keys[i]][\"email\"] === email) {\r\n                                usersDB.child(users[keys[i]][\"id\"]).child(\"profilepic\").set(url)                             \r\n                                break;\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    \r\n                }).then(() => {\r\n                    this.setState({\r\n                        completed: false,\r\n                        loading: 0,\r\n                        uploadedFiles: 1,\r\n                    })                    \r\n                })\r\n\r\n                //UPLOAD COVERPIC LINK\r\n                coverStorageRef.put(coverPic).on(\"state_changed\",snapshot => {\r\n                    let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    this.setState({loading: percentage})\r\n                }, error => {\r\n                    console.log(error);                \r\n                }, () => {\r\n                    usersDB.once(\"value\", data => {\r\n                        const users = data.val();\r\n                        const keys = Object.keys(users);\r\n    \r\n                        coverStorageRef.getDownloadURL().then((url) => {\r\n                            for (let i = 0; i < keys.length; i++){\r\n                                if (users[keys[i]][\"email\"] === email) {\r\n                                    usersDB.child(users[keys[i]][\"id\"]).child(\"coverpic\").set(url)                             \r\n                                    break;\r\n                                }\r\n                            }\r\n                        })\r\n    \r\n                        \r\n                    }).then(() => {\r\n                        this.setState({\r\n                            completed: true,\r\n                            loading: 0,\r\n                            uploadedFiles: 2,\r\n                        })\r\n                    })\r\n                })\r\n            } )\r\n        } else if (typeof(this.state.profilePic) === \"object\" && typeof(this.state.coverPic) === \"string\") {\r\n            \r\n            //UPLOAD ONLY PROFILEPIC\r\n            this.setState({filesToUpload: 1})\r\n\r\n            profileStorageRef.put(profilePic).on(\"state_changed\",snapshot => {\r\n                let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                this.setState({loading: percentage})\r\n            }, error => {\r\n                console.log(error);                \r\n            }, () => {\r\n\r\n\r\n                usersDB.once(\"value\", data => {\r\n                    const users = data.val();\r\n                    const keys = Object.keys(users);\r\n\r\n                    profileStorageRef.getDownloadURL().then((url) => {\r\n                        for (let i = 0; i < keys.length; i++){\r\n                            if (users[keys[i]][\"email\"] === email) {\r\n                                usersDB.child(users[keys[i]][\"id\"]).child(\"profilepic\").set(url)                             \r\n                                break;\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    \r\n                }).then(() => {\r\n                    this.setState({\r\n                        completed: true,\r\n                        loading: 0,\r\n                        uploadedFiles: 1,\r\n                    })\r\n                })\r\n\r\n            } )\r\n\r\n        } else {\r\n\r\n            //UPLOAD ONLY COVERPIC\r\n            this.setState({filesToUpload: 1})\r\n\r\n            coverStorageRef.put(coverPic).on(\"state_changed\",snapshot => {\r\n                let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                this.setState({loading: percentage})\r\n            }, error => {\r\n                console.log(error);                \r\n            }, () => {\r\n                usersDB.once(\"value\", data => {\r\n                    const users = data.val();\r\n                    const keys = Object.keys(users);\r\n\r\n                    coverStorageRef.getDownloadURL().then((url) => {\r\n                        for (let i = 0; i < keys.length; i++){\r\n                            if (users[keys[i]][\"email\"] === email) {\r\n                                usersDB.child(users[keys[i]][\"id\"]).child(\"coverpic\").set(url)                             \r\n                                break;\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    \r\n                }).then(() => {\r\n                    this.setState({\r\n                        completed: true,\r\n                        loading: 0,\r\n                        uploadedFiles: 1,\r\n                    })\r\n                })\r\n            })\r\n        }\r\n\r\n}\r\n\r\n    toggleSettings = () => {\r\n        this.props.toggleSettings();\r\n    }\r\n\r\n    render() { \r\n\r\n        \r\n\r\n        return ( \r\n            <div className=\"changeThings-container\">\r\n                <div className=\"changeThings-content\">\r\n                    <form >\r\n                    <h3>Change Profile Picture</h3>\r\n                    <input type=\"file\" onChange={this.profilePicHandler} className=\"upload-image\" name=\"profile-picture-file\"/>\r\n                    <h3>Change Big Profile Picture</h3>\r\n                    <input type=\"file\" onChange={this.coverPicHandler} className=\"upload-image\" name=\"profileBig-picture-file\"/>\r\n                    <div className=\"changeThings-buttons\">\r\n                        {this.state.loading > 0 ? <h3>Uploading... {this.state.uploadedFiles} of {this.state.filesToUpload} </h3> : null}\r\n                        {this.state.completed ? <h3>Image{\"(s)\"} uploaded.</h3> : null}\r\n                    <button type=\"button\" onClick={this.upload} className=\"upload-button\">Upload</button>\r\n                    \r\n                    <button type=\"button\" onClick={this.toggleSettings} className=\"close-button\">Close</button>\r\n                    </div>\r\n                    </form>\r\n                </div>   \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ChangeThings;","import React from 'react';\nimport firebase from \"firebase\";\nimport {BrowserRouter, Switch, Link, Route} from \"react-router-dom\"\nimport Header from './components/Header';\nimport TimeLine from './components/TimeLine';\nimport UserBox from './components/UserBox';\nimport LandingPage from './components/LandingPage';\nimport RegisterPopUp from './components/RegisterPopUp';\nimport LoggedLanding from './components/LoggedLanding';\nimport Loading from './components/Loading';\nimport UserPage from './components/UserPage';\nimport ChangeThings from './components/ChangeThings';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCbz4cCoC6aj2XaDIpqp4E7uKfUIuLkij0\",\n    authDomain: \"directorio-de-negocios-a257b.firebaseapp.com\",\n    databaseURL: \"https://directorio-de-negocios-a257b.firebaseio.com\",\n    projectId: \"directorio-de-negocios-a257b\",\n    storageBucket: \"directorio-de-negocios-a257b.appspot.com\",\n    messagingSenderId: \"156581943217\",\n    appId: \"1:156581943217:web:2838e8736b764738\"\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nconst usersDB = firebase.database().ref().child(\"users\")\nconst tweetsDB = firebase.database().ref().child(\"tweets\")\n\nlet logged = false;\nlet loading = true;\nlet firstCheck = false;\nlet stateSetted = false;\n\nconst Extructura = {\n  \"id\" : \"rojolelo\",\n  \"firstName\" : \"Ronny\",\n  \"lastName\" : \"Legones\",\n  \"email\" : [\"otrocorreo@correo.com\"],\n  \"following\": [],\n   \"followers\" : []\n}\n\n\nexport default class App extends React.Component {\n\tstate= {\n    showPopUp: false,\n    loading: loading,\n  }\n  toggleRegisterPopUp = this.toggleRegisterPopUp.bind(this)\n  register = this.register.bind(this)\n  logIn = this.logIn.bind(this)\n  logOut = this.logOut.bind(this);\n\n  loadingFalse = () => {\n    this.setState({\n      loading:false\n    })\n  }\n\n  toggleRegisterPopUp(){\n    this.setState({\n      showPopUp: !this.state.showPopUp\n    })\n  }\n\n  logIn(email, password){\n    this.setState({loading: true})\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n      if (error.code === \"auth/invalid-email\"){\n        window.alert(\"The email address is badly formatted\")\n      } else if (error.code === \"auth/wrong-password\"){\n        window.alert(\"The password you entered is incorrect\")\n      } else if (error.code === \"auth/user-not-found\"){\n        window.alert(\"The user doesnt exist.\")\n      }\n    }).then(() => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          logged = true;\n          this.setState({\n            loading:false\n          })\n        } else {\n          this.setState({loading:false})\n        }\n      })\n    })  \n  }\n\n  logOut(){\n    firebase.auth().signOut().then(()=>{\n      logged = false;\n      window.location.replace(\"/twitter-clone/\")\n      this.setState({})\n  });\n  }\n  \n  register(userData){{\n    console.log(userData)\n\n    const {name, userId, email, password} = userData;\n\n\n    const newUser = {\n      \"id\" : userId,\n      \"firstName\" : name,\n      \"email\" : email,\n      \"following\": [],\n       \"followers\" : []\n    }\n\n    var userCredential = firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\n      // Handle Errors here.\n      console.log(error.code);\n      console.log(error.message);\n      // ...\n    }).then(result => {\n      if (result) {\n        usersDB.child(userId).update(newUser)        \n      }\n      console.log(\"user in db\")\n\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n        console.log(error)\n      }).then(result => {\n        window.location.reload()\n      })  \n    })\n    \n  }}\n\n  toggleSettings = () => {\n    this.setState({\n      toggleSettings: !this.state.toggleSettings\n    })\n  }\n\n  renderLogged() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n\n                <Route exact path={\"/tweet/:id\"} render={() => {\n                  const id = window.location.pathname.replace(\"/tweet/\", \"\")\n                    return (\n                      <React.Fragment>\n                        <Header logOut={this.logOut} toggleSettings={this.toggleSettings}/>\n\n                        {this.state.toggleSettings ? <ChangeThings toggleSettings={this.toggleSettings}/> : null}\n                    \n                        <LoggedLanding key={id}/>\n                      </React.Fragment>\n                  )\n                }}/>\n                \n                <Route exact path={\"/:id\"} render={() => {\n                    const id = window.location.pathname.replace(\"/twitter-clone/\", \"\")\n                    return (\n                      <React.Fragment>\n                        <Header logOut={this.logOut} key={id} toggleSettings={this.toggleSettings}/>\n                    \n                        {this.state.toggleSettings ? <ChangeThings toggleSettings={this.toggleSettings}/> : null}\n\n                        <UserPage key={id} id={id}/>\n                      </React.Fragment>\n                  )\n                }}/>\n                \n                <Route exact path={\"/\"} render={() => {\n                    return (\n                      <React.Fragment>\n                        <Header logOut={this.logOut} toggleSettings={this.toggleSettings}/>\n\n                        {this.state.toggleSettings ? <ChangeThings toggleSettings={this.toggleSettings}/> : null}\n                    \n                        <LoggedLanding/>\n                      </React.Fragment>\n                  )\n                }}/>\n        </BrowserRouter>\n    )\n  }\n \n  renderNoLogged(){\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path={\"/:id\"} render={() => {\n                    const id = window.location.pathname.replace(\"/twitter-clone/\", \"\")\n                    return (\n                      <React.Fragment key={id}>\n                        <Header logOut={this.logOut}/>\n                    \n                      \n                        <UserPage key={id}/>\n                      </React.Fragment>\n                  )\n                }}/>  \n\n            <Route exact path={\"/\"} render={() => {\n                return (\n                  <React.Fragment>\n                  {this.state.showPopUp ? <RegisterPopUp toggleRegisterPopUp={this.toggleRegisterPopUp} register={this.register} /> : null}\n                  {this.state.loading ? <Loading/> : null}\n                  <LandingPage \n                  logIn={this.logIn}\n                  toggleRegisterPopUp={this.toggleRegisterPopUp}/>                  \n                  </React.Fragment>\n                )\n            }}/>\n        </BrowserRouter>\n        )\n  }\n  \n\n\trender() {\n\n// Loading for checking already Logged user    \n      if (!firstCheck) {\n        firebase.auth().onAuthStateChanged(function(user) {        \n          if (user) {\n            firstCheck = true;  \n            logged=true;\n            loading = false;              \n\n          } else {\n            loading = false;\n            firstCheck = true;            \n          }\n        });        \n      } \n\n        var interval = setInterval( x => {\n          if (stateSetted === false && firstCheck) {\n            stateSetted = true;\n            this.setState({\n              loading: false\n            })\n          }\n        }, 2000)\n///////////////////////////////////////////////////      \n\n      \n\n        \n        if (logged) {          \n          return (\n            <React.Fragment>\n              {this.renderLogged()}\n            </React.Fragment>\n          )\n        } else {\n          return (\n            <React.Fragment>\n              {this.renderNoLogged()}\n            </React.Fragment>\n          )\n        } \n\t}\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}